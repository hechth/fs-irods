# see documentation, e.g.
# - https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata
# - https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# - https://www.python.org/dev/peps/pep-0621/

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "fs-irods"
version = "0.1.0"
description = "PyFilesystem2 extension for iRODS"
authors = ["Helge Hecht <helge.hecht@recetox.muni.cz>"]
readme = "README.md"
packages = [{include = "fs_irods"}]
keywords = [
    "PyFilesystem2",
    "iRODS",
]
license = "MIT"

[[tool.poetry.source]]
name = "pypi-public"
url = "https://pypi.org/simple/"

[tool.poetry.dependencies]
python = "^3.8"
fs = "^2.4.16"
python-irodsclient = "^3.0.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
twine = "^4.0.2"
build = "^1.0.3"
ruff = "^0.1.5"
pytest-mock = "^3.12.0"
jupyter = "^1.1.1"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["fs_irods"]
command_line = "-m pytest"

[tool.isort]
lines_after_imports = 2
force_single_line = 1
no_lines_before = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = "fs_irods"
src_paths = ["fs_irods", "tests"]
line_length = 120


[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "F",  # Pyflakes
    "E",  # pycodestyle (error)
    "W",    # pycodestyle (warning)
    # "C90",  # mccabe
    "I",    # isort
    "D",    # pydocstyle
    # "PL",   # Pylint
    # "PLC",  # Convention
    # "PLE",  # Error
    # "PLR",  # Refactor
    # "PLW",  # Warning

]
ignore = [
    'D100',  # Missing module docstring
    'D104',  # Missing public package docstring
    # The following list excludes rules irrelevant to the Google style
    'D203',
    'D204',
    'D213',
    'D215',
    'D400',
    'D401',
    'D404',
    'D406',
    'D407',
    'D408',
    'D409',
    'D413',
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
    "scripts",
]
per-file-ignores = {}


# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py39"
line-length = 120

[tool.ruff.isort]
known-first-party = ["fs_irods"]
force-single-line = true
no-lines-before = ["future","standard-library","third-party","first-party","local-folder"]
